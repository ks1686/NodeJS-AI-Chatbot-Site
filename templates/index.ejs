<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Main Page</title>
    <style>
      .category-button,
      .cart-button {
        display: inline-block;
        margin: 5px;
        padding: 90px 100px;
        font-size: 40px;
        cursor: pointer;
        text-align: center;
        text-decoration: none;
        color: white;
        background-color: #007bff;
        border: none;
        border-radius: 5px;
      }
      .category-button:hover,
      .cart-button:hover {
        background-color: #0056b3;
      }
      .cart-button {
        position: fixed;
        top: 10px;
        right: 10px;
        padding: 90px 100px;
        font-size: 40px;
      }
      .category-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
        grid-gap: 40px;
      }
      .center-content {
        display: flex;
        flex-direction: column;
        justify-content: center; /* Vertical centering */
        height: 100vh; /* Full viewport height */
      }
    </style>
  </head>
  <body>
    <a href="/view_cart" class="cart-button">View Cart</a>

    <h1>Menu Categories</h1>
    <div class="center-content">
      <div class="category-grid" id="category-buttons">
        <!-- Dynamic category buttons will be inserted here -->
      </div>
    </div>

    <!-- Include chat box partial -->
    <%- include('partials/chat') -%>

    <!-- Your JavaScript imports and scripts -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="/js/scripts.js"></script>
    <script>
      // Fetch menu data from server
      const urlParams = new URLSearchParams(window.location.search);
      const menuParam = urlParams.get("menu");
      const fetchUrl = menuParam ? `/menu?menu=${menuParam}` : "/menu";

      fetch(fetchUrl)
        .then((response) => response.json())
        .then((data) => {
          const categoryContainer = document.getElementById("category-buttons");
          const existingCategories = new Set(); // Set to track existing categories

          // Loop through menu data and create category buttons
          data.forEach((item) => {
            if (item.in_stock && !existingCategories.has(item.category)) {
              const categoryButton = document.createElement("a");
              categoryButton.href = `/category/${item.category}?menu=${
                menuParam || "menu"
              }`;
              categoryButton.classList.add("category-button");
              categoryButton.textContent = item.category;
              categoryContainer.appendChild(categoryButton);

              existingCategories.add(item.category); // Add category to set
            }
          });
        })
        .catch((error) => console.error("Error fetching menu data:", error));
    </script>
  </body>
</html>
